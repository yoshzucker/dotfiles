#!/usr/bin/env bash

set -euo pipefail
IFS=$'\n\t'

################################################################################
# Help / usage
################################################################################
usage() {
  cat <<EOF
Usage:
  $0 unlink
  -h, --help         Show this help message
EOF
  exit 1
}

################################################################################
# Option parsing
################################################################################
while getopts hn-: opt; do
  case $opt in
    h) usage ;;
    -)
      case "$OPTARG" in
        help) usage ;;
        *) echo "Unknown option --$OPTARG"; usage ;;
      esac
      ;;
    \?) echo "Invalid option: -$OPTARG" >&2; usage ;;
  esac
done
shift $((OPTIND - 1))

################################################################################
# Remove symbolic links
################################################################################
unlink_dotfiles() {
  echo "Unlinking dotfiles..."

  # Remove dotfile symlinks directly under $HOME
  find "$HOME" -maxdepth 1 -type l -name ".*" -print -exec rm -f {} +

  # Remove all symlinks under .config, .local, and .emacs.d
  for dir in "$HOME/.config" "$HOME/.local" "$HOME/.emacs.d"; do
    if [ -d "$dir" ]; then
      find "$dir" -maxdepth 1 -type l -print -exec rm -f {} +
    fi
  done

  echo "Finished unlinking."
}

################################################################################
# Main
################################################################################

if [ "$#" -eq 0 ]; then
  usage
fi

case "$1" in
  unlink)
    unlink_dotfiles
    ;;
  *)
    echo "Unknown command: $1" >&2
    usage
    ;;
esac
